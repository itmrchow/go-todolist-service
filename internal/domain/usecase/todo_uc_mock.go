// Code generated by MockGen. DO NOT EDIT.
// Source: todo_uc.go
//
// Generated by this command:
//
//	mockgen -source=todo_uc.go -destination=todo_uc_mock.go -package=usecase
//

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTodoUseCase is a mock of TodoUseCase interface.
type MockTodoUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockTodoUseCaseMockRecorder
	isgomock struct{}
}

// MockTodoUseCaseMockRecorder is the mock recorder for MockTodoUseCase.
type MockTodoUseCaseMockRecorder struct {
	mock *MockTodoUseCase
}

// NewMockTodoUseCase creates a new mock instance.
func NewMockTodoUseCase(ctrl *gomock.Controller) *MockTodoUseCase {
	mock := &MockTodoUseCase{ctrl: ctrl}
	mock.recorder = &MockTodoUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoUseCase) EXPECT() *MockTodoUseCaseMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockTodoUseCase) CreateTodo(ctx context.Context, req CreateTodoRequest) (*CreateTodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", ctx, req)
	ret0, _ := ret[0].(*CreateTodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockTodoUseCaseMockRecorder) CreateTodo(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockTodoUseCase)(nil).CreateTodo), ctx, req)
}

// FindTodo mocks base method.
func (m *MockTodoUseCase) FindTodo(ctx context.Context, req FindTodoRequest) (*FindTodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTodo", ctx, req)
	ret0, _ := ret[0].(*FindTodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTodo indicates an expected call of FindTodo.
func (mr *MockTodoUseCaseMockRecorder) FindTodo(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTodo", reflect.TypeOf((*MockTodoUseCase)(nil).FindTodo), ctx, req)
}

// UpdateTodo mocks base method.
func (m *MockTodoUseCase) UpdateTodo(ctx context.Context, req UpdateTodoRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTodo", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTodo indicates an expected call of UpdateTodo.
func (mr *MockTodoUseCaseMockRecorder) UpdateTodo(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTodo", reflect.TypeOf((*MockTodoUseCase)(nil).UpdateTodo), ctx, req)
}
